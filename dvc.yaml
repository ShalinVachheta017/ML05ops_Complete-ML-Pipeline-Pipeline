# Main DVC pipeline definition file

stages:
  # Stage: data_ingestion
  # Runs the data ingestion script to collect raw data.
  # 'deps' lists the script dependencies.
  # 'params' indicates the parameters used during ingestion.
  # 'outs' defines the output directory for raw data.
  data_ingestion:
    cmd: python src/data_ingestion.py
    deps:  # dependencies for data_ingestion
    - src/data_ingestion.pys
    params:
    - data_ingestion.test_size
    outs:
    - data/raw

  # Stage: data_preprocessing
  # Processes the raw data by cleaning and encoding using the preprocessing script.
  # 'deps' include raw data and preprocessing script.
  # 'outs' points to the interim processed data folder.
  data_preprocessing:
    cmd: python src/data_preprocessing.py
    deps:
    - data/raw
    - src/data_preprocessing.py
    outs:
    - data/interim

  # Stage: feature_engineering
  # Applies feature engineering (e.g., TF-IDF transformation) on preprocessed data.
  # 'deps' include the interim data and the feature engineering script.
  # 'params' include feature extraction parameters.
  # 'outs' points to the processed data output directory.
  feature_engineering:
    cmd: python src/feature_engineering.py
    deps:
    - data/interim
    - src/feature_engineering.py
    params:
    - feature_engineering.max_features
    outs:
    - data/processed

  # Stage: model_building
  # Trains a machine learning model using the processed data.
  # 'deps' include processed data and model building script.
  # 'params' include hyperparameters for the RandomForest model.
  # 'outs' stores the trained model file.
  model_building:
    cmd: python src/model_building.py
    deps:
    - data/processed
    - src/model_building.py
    params:
    - model_building.n_estimators
    - model_building.random_state
    outs:
    - models/model.pkl

  # Stage: model_evaluation
  # Evaluates the trained model using test data and generates evaluation metrics.
  # 'deps' include the trained model and evaluation script.
  # 'metrics' captures evaluation results in a JSON report.
  model_evaluation:
    cmd: python src/model_evaluation.py
    deps:
    - models/model.pkl
    - src/model_evaluation.py
    metrics:
    - reports/metrics.json

# Global parameters for the pipeline are defined in this section.
params:
- dvclive/params.yaml
metrics:
- dvclive/metrics.json
plots:
- dvclive/plots/metrics:
    x: step
